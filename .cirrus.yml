linux_build_task:
  container:
    image: gcc:latest

  submodules_script:
    - git submodule init
    - git submodule update
  
  apt_script:
    - apt-get update -qq
    #- apt-get install libncurses5-dev libsndfile1-dev libboost-filesystem-dev libboost-system-dev libboost-dev libasound2 libasound2-dev -qq -y
    #- apt-get install libncurses5-dev libsndfile1-dev libboost-all-dev libasound2 libasound2-dev -qq -y
    - apt-get install libncurses5-dev libsndfile1-dev libasound2 libasound2-dev git -qq -y

  boost_cache:
    folder: boost_1_68_0
    populate_script:
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - tar xf boost_1_68_0.tar.gz
      - cd boost_1_68_0
      - ./bootstrap.sh --with-libraries=system,filesystem
  
  boost_build_script:
    - cd boost_1_68_0
    - ./b2 install
  
  lame_cache:
    folder: lame-3.100
    populate_script:
      - wget https://netix.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      - tar xf lame-*
      - cd lame-3.100
      - ./configure --disable-decoder
  
  lame_build_script:
    - cd lame-3.100
    - make
    - make install

  rtaudio_cache: 
    folder: rtaudio-5.0.0
    populate_script:
      - wget http://www.music.mcgill.ca/~gary/rtaudio/release/rtaudio-5.0.0.tar.gz
      - tar xf rtaudio-*
      - cd rtaudio-5.0.0
      - ./configure

  rtaudio_build_script:
    - cd rtaudio-5.0.0
    - make
    - make install

  build_script:
    - chmod +x autogen.sh
    - ./autogen.sh
    - mkdir -p chronicle-v1.0.0-linux
    - cd chronicle-v1.0.0-linux
    - ../configure && make

  dist_script:
    - cd chronicle-v1.0.0-linux
    - make mostlyclean
    - ls -al
    - deps=$(ldd ./chronicle.exe | awk '/~*mingw*/ {print $3}')
    - for dep in $deps; do cp $dep . ;done
    - cp ../LICENCE .
    - cp ../README.md .
    - cp ../CHANGELOG.md .
    - cd ..
    - tar zcf chronicle-v1.0.0-linux.tar.gz chronicle-v1.0.0-linux

windows_build_task:
  # Most sources need to be built from scratch, since the mingw version of pkg-config ignores PKG_CONFIG_PATH
  env:
    # Let's do it just for conveniences' sake
    PKG_CONFIG_PATH: /usr/local/lib/pkgconfig
  container:
    image: gcc:latest

  submodules_script:
    - git submodule init
    - git submodule update

  apt_script:
    - apt-get update -qq
    - apt-get install mingw-w64 mingw-w64-tools pkg-config git libtool libtool-bin -qq -y

  # libtool_cache:
  #   folder: libtool
  #   populate_script:
  #     - git clone git://git.savannah.gnu.org/libtool.git
  #     - cd libtool

  # libtool_build:
  #   - 

  lame_cache:
    folder: lame-3.100
    populate_script:
      - wget https://netix.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      - tar xf lame-*
      - cd lame-3.100
      - ./configure --disable-decoder --disable-shared --enable-static --host=x86_64-w64-mingw32
  
  lame_build_script:
    - cd lame-3.100
    - make
    - make install

  libsndfile_cache:
    folder: libsndfile-1.0.28
    populate_script:
      - wget http://www.mega-nerd.com/libsndfile/files/libsndfile-1.0.28.tar.gz
      - tar xf libsndfile-1.0.28.tar.gz
      - cd libsndfile-1.0.28
      - ./configure --host=x86_64-w64-mingw32

  libsndfile_build_script:
    - cd libsndfile-1.0.28
    - make
    - make install

  rtaudio_cache: 
    folder: rtaudio
    populate_script:
      - git clone http://github.com/thestk/rtaudio
      - cd rtaudio
      - ./autogen.sh --no-configure
      - export CFLAGS=-Wno-unused-but-set-variable # We need this for the RtAudio build
      - ./configure --host=x86_64-w64-mingw32

  rtaudio_build_script:
  # Depends on libsndfile
    - cd rtaudio
    - make
    - make install

  ncurses_cache:
    folder: ncurses-6.1
    populate_script:
      - wget ftp://ftp.invisible-island.net/ncurses/ncurses-6.1.tar.gz
      - tar xf ncurses-6.1.tar.gz
      - cd ncurses-6.1
      - ./configure --enable-term-driver --enable-sp-funcs --host=x86_64-w64-mingw32 --with-build-cc=gcc --with-pkg-config-libdir=${PKG_CONFIG_PATH} --enable-pc-files --prefix=/usr/local
      #--prefix=/usr/local/x86_64-w64-mingw32
  
  ncurses_build_script:
    - cd ncurses-6.1
    - make
    - make install

  boost_cache:
    folder: boost_1_68_0
    populate_script:
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - tar xf boost_1_68_0.tar.gz
      - cd boost_1_68_0
      - 'echo "using gcc : : x86_64-w64-mingw32-gcc ;" > user-config.jam'
      - ./bootstrap.sh --with-libraries=system,filesystem --prefix=/usr/local

  boost_build_script:
  - cd boost_1_68_0
  - ./b2 --user-config=user-config.jam toolset=gcc target-os=windows release address-model=64 architecture=x86 install
  #- ./b2 toolset=gcc-mingw target-os=windows release address-model=64 architecture=x86

  build_script:
    #- pkg-config rtaudio --debug
    - chmod +x autogen.sh
    - ./autogen.sh
    - ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 --prefix=/usr/local && make