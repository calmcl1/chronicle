linux_build_task:
  container:
    image: gcc:latest

  apt_script:
    - apt-get update -qq
    #- apt-get install libncurses5-dev libsndfile1-dev libboost-filesystem-dev libboost-system-dev libboost-dev libasound2 libasound2-dev -qq -y
    #- apt-get install libncurses5-dev libsndfile1-dev libboost-all-dev libasound2 libasound2-dev -qq -y
    - apt-get install libncurses5-dev libsndfile1-dev libasound2 libasound2-dev -qq -y

  boost_cache:
    folder: boost_1_68_0
    populate_script:
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - tar xf boost_1_68_0.tar.gz
      - cd boost_1_68_0
      - ./bootstrap.sh --with-libraries=system,filesystem
  
  boost_build_script:
    - cd boost_1_68_0
    - ./b2 install
  
  lame_cache:
    folder: lame-3.100
    populate_script:
      - wget https://netix.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      - tar xf lame-*
      - cd lame-3.100
      - ./configure --disable-decoder
  
  lame_build_script:
    - cd lame-3.100
    - make
    - make install

  rtaudio_cache: 
    folder: rtaudio-5.0.0
    populate_script:
      - wget http://www.music.mcgill.ca/~gary/rtaudio/release/rtaudio-5.0.0.tar.gz
      - tar xf rtaudio-*
      - cd rtaudio-5.0.0
      - ./configure

  rtaudio_build_script:
    - cd rtaudio-5.0.0
    - make
    - make install

  build_script:
  - chmod +x autogen.sh
  - ./autogen.sh
  - ./configure && make

windows_build_task:
  # Most sources need to be built from scratch, since the mingw version of pkg-config ignores PKG_CONFIG_PATH
  #env:
    # Let's do it just for conveniences' sake
    PKG_CONFIG_PATH: /usr/local/x86_64-w64-mingw32/lib/pkgconfig
  container:
    image: gcc:latest

  apt_script:
    - apt-get update -qq
    - apt-get install libncurses5-dev libsndfile1-dev mingw-w64 mingw-w64-tools pkg-config libtool -qq -y

  ncurses_cache:
    folder: ncurses-6.1
    populate_script:
      - wget ftp://ftp.invisible-island.net/ncurses/ncurses-6.1.tar.gz
      - tar xf ncurses-6.1.tar.gz
      - cd ncurses-6.1.tar.gz
      - ./configure --prefix=/usr/local/x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --with-libtool
  
  ncurses_build_script:
    - cd ncurses-6.1
    - make
    - make install    

  alsa_cache:
    folder: alsa-lib-1.1.6.tar.bz2
    populate_script:
      - wget ftp://ftp.alsa-project.org/pub/lib/alsa-lib-1.1.6.tar.bz2
      - tar xjf alsa-lib-1.1.6.tar.bz2
      - cd alsa-lib-1.1.6
      - ./configure --prefix=/usr/local/x86_64-w64-mingw32 --host=x86_64-w64-mingw32
    
  alsa_build_script:
    - cd alsa-lib-1.1.6
    - make install

  boost_cache:
    folder: boost_1_68_0
    populate_script:
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - tar xf boost_1_68_0.tar.gz
      - cd boost_1_68_0
      - 'echo "using gcc : : x86_64-w64-mingw32-gcc ;" > user-config.jam'
      - ./bootstrap.sh --with-libraries=system,filesystem --prefix=/usr/local
  
  boost_build_script:
  - cd boost_1_68_0
  - ./b2 --user-config=user-config.jam toolset=gcc target-os=windows release address-model=64 architecture=x86 install
  #- ./b2 toolset=gcc-mingw target-os=windows release address-model=64 architecture=x86
  
  lame_cache:
    folder: lame-3.100
    populate_script:
      - wget https://netix.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      - tar xf lame-*
      - cd lame-3.100
      - ./configure --disable-decoder --disable-shared --enable-static --host=x86_64-w64-mingw32
  
  lame_build_script:
    - cd lame-3.100
    - make
    - make install

  rtaudio_cache: 
    folder: rtaudio-5.0.0
    populate_script:
      - wget http://www.music.mcgill.ca/~gary/rtaudio/release/rtaudio-5.0.0.tar.gz
      - tar xf rtaudio-*
      - cd rtaudio-5.0.0
      - ./configure --prefix=/usr/local/x86_64-w64-mingw32

  rtaudio_build_script:
    - cd rtaudio-5.0.0
    - make
    - make install

  build_script:
  - pkg-config rtaudio --debug
  - chmod +x autogen.sh
  - ./autogen.sh
  - ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 && make