env:
  BACKBLAZE_APP_KEY_ID: ENCRYPTED[95a37d7a31679c7fb32b03d05b33edb065dcf7f0f823e7fe721e3247e5f3668d4063591d5c733ade1fd7a32f5f859c5f]
  BACKBLAZE_APP_KEY: ENCRYPTED[770e70e48569f43396e50d0692a4c1abe64e4821c1ef816520c792ad6222c61641b7e56132e37896340f740720196604]

win_machine_build_task:
  matrix:
    - {
        env: { BITNESS: x64, GENERATOR_STRING: "Visual Studio 15 2017 Win64" },
        windows_container: { dockerfile: .ci/Dockerfile.x64, os_version: 2019 },
      }
    - {
        env: { BITNESS: x86, GENERATOR_STRING: "Visual Studio 15 2017" },
        windows_container: { dockerfile: .ci/Dockerfile.x86, os_version: 2019 },
      }

  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'

  curses_download_cache:
    folder: PDCurses/wincon
    fingerprint_script: echo pdcurses-fingerprint-0
    populate_script:
      - git clone https://github.com/wmcbrine/PDCurses
      - cd PDCurses/wincon
      - set VSCMD_DEBUG=1
      - '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat" -arch=%BITNESS%'
      - nmake -f Makefile.vc UTF8=Y WIDE=y
      - cmake -E copy ../curses.h C:/include
      - cmake -E copy ../panel.h C:/include
      - cmake -E copy ../curspriv.h C:/include
      - cmake -E copy pdcurses.lib C:/lib
      - nmake -f Makefile.vc clean # Remove the generated files, so they aren't cached

  lame_download_cache:
    folder: lame-3.100
    fingerprint_script: echo lame-3.100-fingerprint-0
    populate_script:
      - aria2c https://netix.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
      - 7z x lame-3.100.tar.gz
      - 7z x lame-3.100.tar
      - cd lame-3.100
      - ps: ((Get-Content -path .\Makefile.MSVC -Raw) -replace '/machine:I386','/machine:X64') | Set-Content -path .\Makefile.MSVCx64 # Setup for x64
      - cmake -E copy Makefile.MSVC Makefile.MSVCx86
      - cmake -E copy configMS.h config.h /y

  lame_build_script:
    - cd lame-3.100
    - set VSCMD_DEBUG=1
    - '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat" -arch=%BITNESS%'
    - nmake -f Makefile.MSVC%BITNESS% comp=msvc asm=no DLL /D
    - cmake -E copy output\libmp3lame.dll C:/lib
    - cmake -E copy output\libmp3lame-static.lib C:/lib
    - cmake -E remove_directory output # Remove the generated files, so they aren't cached

  rtaudio_download_cache:
    folder: rtaudio-5.1.0
    fingerprint_script: echo rtaudio-5.1.0-fingerprint-0
    populate_script:
      - aria2c http://www.music.mcgill.ca/~gary/rtaudio/release/rtaudio-5.1.0.tar.gz
      - 7z x rtaudio-5.1.0.tar.gz
      - 7z x rtaudio-5.1.0.tar

  rtaudio_build_script:
    - cd rtaudio-5.1.0
    - cmake -E make_directory __build && cd __build
    - cmake -G "%GENERATOR_STRING%" .. -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%BITNESS%-windows --debug-output
    - cmake --build . -v --config Release
    - cmake --install .
    - cd ..
    - cmake -E copy __build\Release\rtaudio.lib C:/lib
    - cmake -E copy ./RtAudio.cpp C:/include
    - cmake -E copy RtAudio.h C:/include
    - cmake -E remove_directory __build # Remove the generated files, so they aren't cached

  build_script:
    - cmake -E make_directory __build && cd __build
    - cmake -G "%GENERATOR_STRING%" .. -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%BITNESS%-windows --debug-output
    - cmake --build . -v --config Release
  on_failure:
    - cat "__build/CMakeFiles/CMakeOutput.log"

  package_artifacts:
    path: __build/Release
# publish_task:
#   container:
#     image: gcc:latest

#   depends_on:
#     - linux_build
#     - win_build
#   only_if: $CIRRUS_BRANCH == 'master'
#   publish_script:
#     - apt update && apt install python python-pip -y
#     - pip install b2
#     - chmod +x .ci/*.sh
#     - b2 authorize-account $BACKBLAZE_APP_KEY_ID $BACKBLAZE_APP_KEY
#     - .ci/chronicle-b2-upload.sh
